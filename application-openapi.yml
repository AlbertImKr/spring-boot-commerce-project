openapi: 3.0.0
servers:
  - description: authorizationServer
    url: http://localhost:9000
  - description: api
    url: http://localhost:8080

info:
  description: This is Albert's commerce-project API
  version: "1.0.0"
  title: simple-commerce
  contact:
    email: guang7226961@naver.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: authorizationServer
    description: oAuth2 Authorization Server
  - name: ApiApplication
    description: Operations available to regular developers
paths:
  /users:
    post:
      tags:
        - authorizationServer
      summary: 유저를 추가한다
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinRequest'
      responses:
        '201':
          description: 유저 추가 성공
        '400':
          description: 잘못 입력했습니다
        '409':
          description: 이미 존재하는 유저이다
  /oauth2/authorize:
    get:
      tags:
        - authorizationServer
      operationId: authorize
      summary: authorize 토큰 요청 페이지
      description: 로그인 후 요청 해야 합니다. 브라우저에서 요청을 해야한다 http://localhost:9000/oauth2/authorize?response_type=code&client_id=oidc-client&scope=openid profile&redirect_uri=http://127.0.0.1:8080/login/oauth2/code/oidc-client
      parameters:
        - name: response_type
          in: query
          description: response type
          required: true
          schema:
            type: string
            example: code
        - name: client_id
          in: query
          description: Client ID
          required: true
          schema:
            type: string
            example: oidc-client
        - name: scope
          in: query
          description: scope
          required: true
          schema:
            type: string
            example: openid profile
        - name: redirect_uri
          in: query
          description: redirect_uri
          required: true
          schema:
            type: string
            example: http://127.0.0.1:8080/login/oauth2/code/oidc-client
      responses:
        '200':
          description: 권한 부여 페이지 혹은 권한 부여 페이지
  /token:
    post:
      tags:
        - authorizationServer
      summary: Token를 요청한다
      operationId: getToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: AccessToken,RefreshToken,IdToken
        '400':
          description: 발급 실패
  /userinfo:
    get:
      security:
        - oAuth2: [ profile,openid ]
      tags:
        - authorizationServer
      summary: UserInfo 요청한다
      operationId: getUserInfo
      responses:
        '200':
          description: 요청 성공
        '401':
          description: 권한이 없다
  /.well-known/openid-configuration:
    get:
      tags:
        - authorizationServer
      summary: issuer를 요청한다
      operationId: getConfiguration
      responses:
        '200':
          description: 요청 성공
  /users/profile:
    get:
      tags:
        - ApiApplication
      summary: UserInfo를 가져온다
      operationId: getUserProfileApi
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: UserInfo가져오기 성공
    put:
      tags:
        - ApiApplication
      summary: userInfo를 update한다
      operationId: updateUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinRequest"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: 유저 업로드 성공

components:
  schemas:
    UserInfoRequest:
      type: object
      properties:
        nickname:
          type: string
          example: "jack"
        dateOfBirth:
          type: string
          example: "2000-06-18"
        phoneNumber:
          type: string
          example: "01011112222"
        address:
          type: string
          example: "서울시강동구"
    ErrorMessage:
      type: object
      properties:
        error-message:
          type: string
          example:
            "스토어가 존재 하지 않습니다."
    User:
      type: object
      properties:
        storeId:
          type: string
          example:
            "648dcaabc07dce0417febb2e"
        storeName:
          type: string
          example:
            "testStoreName"
        phoneNumber:
          type: string
          example:
            "01011001100"
        address:
          type: string
          example:
            "estAddress"
        email:
          type: string
          example:
            "test@email.com"
        ownerName:
          type: string
          example:
            "testOwner"
    JoinRequest:
      type: object
      required:
        - email
        - nickname
        - password
        - confirmPassword
      properties:
        email:
          type: string
          format: email
          example: example@email.com
        nickname:
          type: string
          description: 길이가 min =3, max =10
          example: jack
        password:
          type: string
          description: 대문자,소문자,숫자가 포함해야 한다(min=8,max=20)
          example: aA!123456789
        confirmPassword:
          type: string
          description: 대문자,소문자,숫자가 포함해야 한다(min=8,max=20)
          example: aA!123456789
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          format: email
          example: example@email.com
        password:
          type: string
          description: 대문자,소문자,숫자가 포함해야 한다(min=8,max=20)
          example: aA!123456789
    TokenRequest:
      type: object
      required:
        - code
        - redirect_uri
        - grant_type
        - client_id
        - client_secret
      properties:
        code:
          type: string
          description: authorize code (/oauth2/authorize)에서 가져온다
        redirect_uri:
          type: string
          example: http://127.0.0.1:8080/login/oauth2/code/oidc-client
        grant_type:
          type: string
          example: authorization_code
        client_id:
          type: string
          example: oidc-client
        client_secret:
          type: string
          example: secret
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://127.0.0.1:9000/oauth2/authorize
          tokenUrl: http://127.0.0.1:9000/oauth2/token
          scopes:
            openid: id
            profile: profile
